{
	// Place your Bitburner workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"New file": {
	 	"scope": "javascript,typescript",
	 	"prefix": "newfile",
	 	"body": [
			"import { readFromJSON } from '/lib/includes'",
			"import { printArray } from '/lib/includes.js'",
			"import { openPorts } from '/lib/includes.js'",
			"import { objectArraySort } from '/lib/includes.js'",
			"import { getServers } from '/lib/includes.js'",
			"import { getServersWithRam } from '/lib/includes.js'",
			"import { getServersWithMoney } from '/lib/includes.js'",
			"//import { secondsToHMS } from '/lib/includes.js'",
			"//import { killAllButThis } from '/lib/includes.js'",
			"//import { connecter } from '/lib/includes.js'",
			"import { randomInt } from '/lib/includes.js'",
			"import { map } from '/lib/includes.js'",
			"//import { readFromJSON } from '/lib/includes.js'",
			"//import { writeToJSON } from '/lib/includes.js'",
				"",
				"/** @param {NS} ns */",
				"/** @param {import('../.').NS} ns */",
				"export async function main(ns) {",
				"}"
				 	],
	 	"description": "New bb file template"


	}
}